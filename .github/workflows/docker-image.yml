name: Docker Image CI

on:
  push:
    
jobs:
  build:
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm/v6, linux/arm/v7, linux/arm64/v8, linux/ppc64le, linux/s390x, linux/riscv64, linux/loong64, linux/mips64le]
        amule_version: [dlp, official-2.3.3]

    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: setValues
      id: setValues
      run: |
        arch=${{ matrix.platform }}
        arch=${arch#*/}
        arch=$(echo $arch | sed 's/\//-/g')
        echo "CPU_ARCH=${arch}" >> $GITHUB_OUTPUT
        if [ ${{ matrix.platform }} = "linux/loong64" ]; then
          echo "IMAGE_TAG=loongarch64/alpine:3.19" >> $GITHUB_OUTPUT
          echo "BOOST_LIBRARY=boost1.84-system" >> $GITHUB_OUTPUT
        elif [ ${{ matrix.platform }} = "linux/mips64le" ]; then
          echo "IMAGE_TAG=loongnix/alpine:3.11" >> $GITHUB_OUTPUT
          echo "BOOST_LIBRARY=" >> $GITHUB_OUTPUT        
        else
          echo "IMAGE_TAG=alpine:edge" >> $GITHUB_OUTPUT
          echo "BOOST_LIBRARY=" >> $GITHUB_OUTPUT
        fi
          
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
          
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
          context: ./
          build-args: |
              amule_version=${{ matrix.amule_version }} 
              image_tag=${{ steps.setValues.outputs.IMAGE_TAG }}
              boost_library=${{ steps.setValues.outputs.BOOST_LIBRARY }}
          file: ./Dockerfile
          push: true
          platforms: ${{ matrix.platform }}
          tags: minnyres/amule-dlp:${{ matrix.amule_version }}-${{ steps.setValues.outputs.CPU_ARCH }}
          provenance: false
          sbom: false
